{
  "openapi": "3.1.0",
  "info": {
    "title": "ergLocale API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ]
  "paths": {
    "/api/v1/login/access-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/create-user": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Create User",
        "operationId": "login-create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/test-token": {
      "post": {
        "tags": [
          "login"
        ],
        "summary": "Test Token",
        "description": "Test access token",
        "operationId": "login-test_token",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/networks/": {
      "get": {
        "tags": [
          "networks"
        ],
        "summary": "Get Networks",
        "description": "Retrieve networks owned by the current user.",
        "operationId": "networks-get_networks",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Network"
                  },
                  "title": "Response Networks-Get Networks"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "networks"
        ],
        "summary": "Create Network",
        "description": "Create a new network.",
        "operationId": "networks-create_network",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/networks/{id}": {
      "get": {
        "tags": [
          "networks"
        ],
        "summary": "Get Network",
        "description": "Retrieve a specific network by ID.",
        "operationId": "networks-get_network",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "networks"
        ],
        "summary": "Update Network",
        "description": "Update an existing network. Only provided fields are updated.",
        "operationId": "networks-update_network",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Network"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "networks"
        ],
        "summary": "Delete Network",
        "description": "Soft delete a network by ID.",
        "operationId": "networks-delete_network",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charge_points/": {
      "get": {
        "tags": [
          "charge_points"
        ],
        "summary": "Get",
        "operationId": "charge_points-get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Network Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargePoint"
                  },
                  "title": "Response Charge Points-Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "charge_points"
        ],
        "summary": "Create",
        "operationId": "charge_points-create",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargePointCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargePoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charge_points/{id}": {
      "get": {
        "tags": [
          "charge_points"
        ],
        "summary": "Get By Id",
        "operationId": "charge_points-get_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargePoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "charge_points"
        ],
        "summary": "Update",
        "operationId": "charge_points-update",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargePointUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargePoint"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charge_points"
        ],
        "summary": "Delete Charge Point",
        "operationId": "charge_points-delete_charge_point",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connectors/": {
      "get": {
        "tags": [
          "connectors"
        ],
        "summary": "Get",
        "operationId": "connectors-get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "charge_point_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Charge Point Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/backend__api__routes__connectors__Connector"
                  },
                  "title": "Response Connectors-Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "connectors"
        ],
        "summary": "Create",
        "operationId": "connectors-create",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routes__connectors__Connector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/connectors/{id}": {
      "get": {
        "tags": [
          "connectors"
        ],
        "summary": "Get By Id",
        "operationId": "connectors-get_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routes__connectors__Connector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "connectors"
        ],
        "summary": "Update Connector",
        "operationId": "connectors-update_connector",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/backend__api__routes__connectors__Connector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "connectors"
        ],
        "summary": "Delete Connector",
        "operationId": "connectors-delete_connector",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vehicles/": {
      "get": {
        "tags": [
          "vehicles"
        ],
        "summary": "Get",
        "operationId": "vehicles-get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle"
                  },
                  "title": "Response Vehicles-Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vehicles"
        ],
        "summary": "Create",
        "operationId": "vehicles-create",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/vehicles/{id}": {
      "get": {
        "tags": [
          "vehicles"
        ],
        "summary": "Get By Id",
        "operationId": "vehicles-get_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "vehicles"
        ],
        "summary": "Update",
        "operationId": "vehicles-update",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vehicles"
        ],
        "summary": "Delete",
        "operationId": "vehicles-delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charging_sessions/": {
      "get": {
        "tags": [
          "charging_sessions"
        ],
        "summary": "Get",
        "operationId": "charging_sessions-get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "connector_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connector Id"
            }
          },
          {
            "name": "charge_point_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Charge Point Id"
            }
          },
          {
            "name": "vehicle_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vehicle Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChargingSession"
                  },
                  "title": "Response Charging Sessions-Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "charging_sessions"
        ],
        "summary": "Create",
        "operationId": "charging_sessions-create",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChargingSessionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/charging_sessions/{id}": {
      "get": {
        "tags": [
          "charging_sessions"
        ],
        "summary": "Get By Id",
        "operationId": "charging_sessions-get_by_id",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargingSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "charging_sessions"
        ],
        "summary": "Delete",
        "operationId": "charging_sessions-delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/optimizations/": {
      "get": {
        "tags": [
          "optimizations"
        ],
        "summary": "Get",
        "operationId": "optimizations-get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Network Id"
            }
          },
          {
            "name": "getChargingProfiles",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Getchargingprofiles"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Optimization"
                  },
                  "title": "Response Optimizations-Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/solar_forcast/": {
      "get": {
        "tags": [
          "solar_forcast"
        ],
        "summary": "Get Solar Forcast",
        "operationId": "solar_forcast-get_solar_forcast",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Network Id"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 48,
              "title": "Hours"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "PT15M",
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Forcast"
                  },
                  "title": "Response Solar Forcast-Get Solar Forcast"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grid_price/": {
      "get": {
        "tags": [
          "grid_price"
        ],
        "summary": "Get Grid Prices",
        "description": "Retrieves realistic dummy grid price forecasts adjusted for the network's\nlocal time, based on specific hardcoded coordinates. Defaults to UTC.\nEnsures timestamps fall on 15-minute boundaries.",
        "operationId": "grid_price-get_grid_prices",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Network Id"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 48,
              "title": "Hours"
            }
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "PT15M",
              "title": "Period"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GridPrice"
                  },
                  "title": "Response Grid Price-Get Grid Prices"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Get Status",
        "description": "Checks the database connection by fetching a single user.\nThis endpoint is public and does not require authentication.",
        "operationId": "status-get_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login-login_access_token"
      },
      "ChargePoint": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_capacity": {
            "type": "integer",
            "title": "Max Capacity"
          },
          "network_id": {
            "type": "string",
            "title": "Network Id"
          },
          "connectors": {
            "items": {
              "$ref": "#/components/schemas/backend__api__routes__charge_points__Connector"
            },
            "type": "array",
            "title": "Connectors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "max_capacity",
          "network_id"
        ],
        "title": "ChargePoint"
      },
      "ChargePointCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_capacity": {
            "type": "integer",
            "title": "Max Capacity"
          },
          "network_id": {
            "type": "string",
            "title": "Network Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "max_capacity",
          "network_id"
        ],
        "title": "ChargePointCreate"
      },
      "ChargePointUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_capacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Capacity"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "max_capacity"
        ],
        "title": "ChargePointUpdate"
      },
      "ChargingProfile": {
        "properties": {
          "chargingProfileId": {
            "type": "integer",
            "title": "Chargingprofileid"
          },
          "transactionId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transactionid"
          },
          "stackLevel": {
            "type": "integer",
            "title": "Stacklevel"
          },
          "chargingProfilePurpose": {
            "type": "string",
            "enum": [
              "TxProfile",
              "ChargePointMaxProfile",
              "TxDefaultProfile"
            ],
            "title": "Chargingprofilepurpose"
          },
          "chargingProfileKind": {
            "type": "string",
            "enum": [
              "Absolute",
              "Recurring",
              "Relative"
            ],
            "title": "Chargingprofilekind"
          },
          "recurrencyKind": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Daily",
                  "Weekly"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Recurrencykind"
          },
          "validFrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validfrom"
          },
          "validTo": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validto"
          },
          "chargingSchedule": {
            "$ref": "#/components/schemas/ChargingSchedule"
          }
        },
        "type": "object",
        "required": [
          "chargingProfileId",
          "stackLevel",
          "chargingProfilePurpose",
          "chargingProfileKind",
          "chargingSchedule"
        ],
        "title": "ChargingProfile"
      },
      "ChargingSchedule": {
        "properties": {
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "startSchedule": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startschedule"
          },
          "chargingRateUnit": {
            "type": "string",
            "enum": [
              "A",
              "W"
            ],
            "title": "Chargingrateunit"
          },
          "chargingSchedulePeriod": {
            "items": {
              "$ref": "#/components/schemas/ChargingSchedulePeriod"
            },
            "type": "array",
            "title": "Chargingscheduleperiod"
          },
          "minChargingRate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minchargingrate"
          }
        },
        "type": "object",
        "required": [
          "chargingRateUnit",
          "chargingSchedulePeriod"
        ],
        "title": "ChargingSchedule"
      },
      "ChargingSchedulePeriod": {
        "properties": {
          "startPeriod": {
            "type": "integer",
            "title": "Startperiod"
          },
          "limit": {
            "type": "number",
            "title": "Limit"
          },
          "numberPhases": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Numberphases",
            "default": 3
          }
        },
        "type": "object",
        "required": [
          "startPeriod",
          "limit"
        ],
        "title": "ChargingSchedulePeriod"
      },
      "ChargingSession": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "idTag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idtag"
          },
          "energy_to_charge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Energy To Charge"
          },
          "max_charging_power_of_vehicle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Charging Power Of Vehicle"
          },
          "required_charging_completion_time": {
            "type": "string",
            "format": "date-time",
            "title": "Required Charging Completion Time"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "charge_point_id": {
            "type": "string",
            "title": "Charge Point Id"
          },
          "connector_id": {
            "type": "string",
            "title": "Connector Id"
          },
          "vehicle_id": {
            "type": "string",
            "title": "Vehicle Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "idTag",
          "energy_to_charge",
          "max_charging_power_of_vehicle",
          "required_charging_completion_time",
          "start_time",
          "end_time",
          "charge_point_id",
          "connector_id",
          "vehicle_id"
        ],
        "title": "ChargingSession"
      },
      "ChargingSessionCreate": {
        "properties": {
          "connector_id": {
            "type": "string",
            "title": "Connector Id"
          },
          "charge_point_id": {
            "type": "string",
            "title": "Charge Point Id"
          },
          "vehicle_id": {
            "type": "string",
            "title": "Vehicle Id"
          },
          "idTag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idtag",
            "default": ""
          },
          "required_charging_completion_time": {
            "type": "string",
            "format": "date-time",
            "title": "Required Charging Completion Time"
          }
        },
        "type": "object",
        "required": [
          "connector_id",
          "charge_point_id",
          "vehicle_id",
          "required_charging_completion_time"
        ],
        "title": "ChargingSessionCreate"
      },
      "ConnectorCreate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "charge_point_id": {
            "type": "string",
            "title": "Charge Point Id"
          },
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "connector_type": {
            "type": "string",
            "title": "Connector Type"
          },
          "current_type": {
            "type": "string",
            "title": "Current Type"
          },
          "current_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Limit"
          },
          "voltage": {
            "type": "integer",
            "title": "Voltage"
          },
          "max_capacity": {
            "type": "integer",
            "title": "Max Capacity"
          },
          "is_smart_charging_capable": {
            "type": "boolean",
            "title": "Is Smart Charging Capable"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "charge_point_id",
          "connector_id",
          "connector_type",
          "current_type",
          "current_limit",
          "voltage",
          "max_capacity",
          "is_smart_charging_capable"
        ],
        "title": "ConnectorCreate"
      },
      "ConnectorUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "connector_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connector Id"
          },
          "connector_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connector Type"
          },
          "current_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Type"
          },
          "current_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Limit"
          },
          "voltage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voltage"
          },
          "max_capacity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Capacity"
          },
          "is_smart_charging_capable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Smart Charging Capable"
          }
        },
        "type": "object",
        "title": "ConnectorUpdate"
      },
      "DataPoint": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "limit": {
            "type": "number",
            "title": "Limit"
          },
          "source": {
            "type": "string",
            "enum": [
              "solar",
              "grid"
            ],
            "title": "Source"
          }
        },
        "type": "object",
        "required": [
          "time",
          "limit",
          "source"
        ],
        "title": "DataPoint"
      },
      "Forcast": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "power": {
            "type": "number",
            "title": "Power"
          }
        },
        "type": "object",
        "required": [
          "time",
          "power"
        ],
        "title": "Forcast"
      },
      "GridPrice": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "price": {
            "type": "number",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "time",
          "price"
        ],
        "title": "GridPrice"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Network": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "example": "Site 1"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "example": "Primary solar installation"
          },
          "max_capacity": {
            "type": "number",
            "title": "Max Capacity",
            "description": "Grid connection capacity in kW",
            "example": 50
          },
          "solar_capacity": {
            "type": "number",
            "title": "Solar Capacity",
            "description": "Solar capacity measure in kW. This will be same as inverter_ac_capacity",
            "example": 45
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "example": 51.178
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "example": -1.826
          },
          "inverter_ac_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Ac Capacity",
            "description": "Total inverter AC capacity in kW",
            "example": 40
          },
          "dc_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dc Capacity",
            "description": "Total module DC capacity (kWp)",
            "example": 45.5
          },
          "install_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Install Date",
            "example": "2023-10-26"
          },
          "module_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Type",
            "description": "Identifier for the selected PV module type",
            "example": "module_b"
          },
          "module_tilt_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Tilt Angle",
            "description": "Module tilt angle in degrees from horizontal",
            "example": 30
          },
          "module_azimuth_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Azimuth Angle",
            "description": "Module azimuth angle in degrees (180=South)",
            "example": 180
          },
          "inverter_efficiency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Efficiency",
            "description": "Inverter efficiency percentage",
            "example": 98.5
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_capacity",
          "solar_capacity",
          "latitude",
          "longitude",
          "id",
          "owner_id"
        ],
        "title": "Network"
      },
      "NetworkCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "example": "Site 1"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "example": "Primary solar installation"
          },
          "max_capacity": {
            "type": "number",
            "title": "Max Capacity",
            "description": "Grid connection capacity in kW",
            "example": 50
          },
          "solar_capacity": {
            "type": "number",
            "title": "Solar Capacity",
            "description": "Solar capacity measure in kW. This will be same as inverter_ac_capacity",
            "example": 45
          },
          "latitude": {
            "type": "number",
            "title": "Latitude",
            "example": 51.178
          },
          "longitude": {
            "type": "number",
            "title": "Longitude",
            "example": -1.826
          },
          "inverter_ac_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Ac Capacity",
            "description": "Total inverter AC capacity in kW",
            "example": 40
          },
          "dc_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dc Capacity",
            "description": "Total module DC capacity (kWp)",
            "example": 45.5
          },
          "install_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Install Date",
            "example": "2023-10-26"
          },
          "module_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Type",
            "description": "Identifier for the selected PV module type",
            "example": "module_b"
          },
          "module_tilt_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Tilt Angle",
            "description": "Module tilt angle in degrees from horizontal",
            "example": 30
          },
          "module_azimuth_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Azimuth Angle",
            "description": "Module azimuth angle in degrees (180=South)",
            "example": 180
          },
          "inverter_efficiency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Efficiency",
            "description": "Inverter efficiency percentage",
            "example": 98.5
          }
        },
        "type": "object",
        "required": [
          "name",
          "max_capacity",
          "solar_capacity",
          "latitude",
          "longitude"
        ],
        "title": "NetworkCreate"
      },
      "NetworkUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Capacity"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "inverter_ac_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Ac Capacity"
          },
          "dc_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dc Capacity"
          },
          "install_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Install Date"
          },
          "module_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Type"
          },
          "module_tilt_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Tilt Angle"
          },
          "module_azimuth_angle": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Azimuth Angle"
          },
          "inverter_efficiency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inverter Efficiency"
          },
          "solar_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Solar Capacity"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "NetworkUpdate"
      },
      "Optimization": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "data_points": {
            "items": {
              "$ref": "#/components/schemas/DataPoint"
            },
            "type": "array",
            "title": "Data Points"
          },
          "cpid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpid"
          },
          "setChargingProfilePDU": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SetChargingProfilePDU"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "data_points"
        ],
        "title": "Optimization"
      },
      "SetChargingProfilePDU": {
        "properties": {
          "connectorId": {
            "type": "integer",
            "title": "Connectorid"
          },
          "csChargingProfiles": {
            "$ref": "#/components/schemas/ChargingProfile"
          }
        },
        "type": "object",
        "required": [
          "connectorId",
          "csChargingProfiles"
        ],
        "title": "SetChargingProfilePDU"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "email"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "title": "UserCreate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Vehicle": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin"
          },
          "license_plate": {
            "type": "string",
            "title": "License Plate"
          },
          "battery_capacity": {
            "type": "number",
            "title": "Battery Capacity"
          },
          "max_charging_power": {
            "type": "number",
            "title": "Max Charging Power"
          },
          "soc": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Soc"
          },
          "target_soc": {
            "type": "number",
            "title": "Target Soc"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "vin",
          "license_plate",
          "battery_capacity",
          "max_charging_power",
          "soc",
          "target_soc"
        ],
        "title": "Vehicle"
      },
      "VehicleCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin",
            "default": ""
          },
          "license_plate": {
            "type": "string",
            "title": "License Plate"
          },
          "battery_capacity": {
            "type": "number",
            "title": "Battery Capacity"
          },
          "max_charging_power": {
            "type": "number",
            "title": "Max Charging Power"
          },
          "target_soc": {
            "type": "number",
            "title": "Target Soc"
          },
          "soc": {
            "type": "number",
            "title": "Soc"
          }
        },
        "type": "object",
        "required": [
          "name",
          "license_plate",
          "battery_capacity",
          "max_charging_power",
          "target_soc",
          "soc"
        ],
        "title": "VehicleCreate"
      },
      "VehicleUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "vin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vin"
          },
          "license_plate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Plate"
          },
          "battery_capacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Battery Capacity"
          },
          "max_charging_power": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Charging Power"
          },
          "target_soc": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Soc"
          },
          "soc": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Soc"
          }
        },
        "type": "object",
        "title": "VehicleUpdate"
      },
      "backend__api__routes__charge_points__Connector": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "connector_type": {
            "type": "string",
            "title": "Connector Type"
          },
          "current_type": {
            "type": "string",
            "title": "Current Type"
          },
          "current_limit": {
            "type": "integer",
            "title": "Current Limit"
          },
          "voltage": {
            "type": "integer",
            "title": "Voltage"
          },
          "max_capacity": {
            "type": "integer",
            "title": "Max Capacity"
          },
          "charge_point_id": {
            "type": "string",
            "title": "Charge Point Id"
          },
          "is_smart_charging_capable": {
            "type": "boolean",
            "title": "Is Smart Charging Capable"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "connector_id",
          "connector_type",
          "current_type",
          "current_limit",
          "voltage",
          "max_capacity",
          "charge_point_id",
          "is_smart_charging_capable"
        ],
        "title": "Connector"
      },
      "backend__api__routes__connectors__Connector": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "charge_point_id": {
            "type": "string",
            "title": "Charge Point Id"
          },
          "connector_id": {
            "type": "integer",
            "title": "Connector Id"
          },
          "connector_type": {
            "type": "string",
            "title": "Connector Type"
          },
          "current_type": {
            "type": "string",
            "title": "Current Type"
          },
          "current_limit": {
            "type": "integer",
            "title": "Current Limit"
          },
          "voltage": {
            "type": "integer",
            "title": "Voltage"
          },
          "max_capacity": {
            "type": "integer",
            "title": "Max Capacity"
          },
          "is_smart_charging_capable": {
            "type": "boolean",
            "title": "Is Smart Charging Capable"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "charge_point_id",
          "connector_id",
          "connector_type",
          "current_type",
          "current_limit",
          "voltage",
          "max_capacity",
          "is_smart_charging_capable"
        ],
        "title": "Connector"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {

            },
            "tokenUrl": "/api/v1/login/access-token"
          }
        }
      }
    }
  }
}